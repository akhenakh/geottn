// Code generated by protoc-gen-go. DO NOT EDIT.
// source: geottnsvc.proto

package geottnsvc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DataPoint struct {
	AppId                string               `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	DeviceId             string               `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Latitude             float64              `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64              `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	Payload              []byte               `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DataPoint) Reset()         { *m = DataPoint{} }
func (m *DataPoint) String() string { return proto.CompactTextString(m) }
func (*DataPoint) ProtoMessage()    {}
func (*DataPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_geottnsvc_d04c6f621b8ce5f8, []int{0}
}
func (m *DataPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPoint.Unmarshal(m, b)
}
func (m *DataPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPoint.Marshal(b, m, deterministic)
}
func (dst *DataPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPoint.Merge(dst, src)
}
func (m *DataPoint) XXX_Size() int {
	return xxx_messageInfo_DataPoint.Size(m)
}
func (m *DataPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPoint.DiscardUnknown(m)
}

var xxx_messageInfo_DataPoint proto.InternalMessageInfo

func (m *DataPoint) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *DataPoint) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *DataPoint) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *DataPoint) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *DataPoint) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *DataPoint) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type KeyList struct {
	Keys                 []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyList) Reset()         { *m = KeyList{} }
func (m *KeyList) String() string { return proto.CompactTextString(m) }
func (*KeyList) ProtoMessage()    {}
func (*KeyList) Descriptor() ([]byte, []int) {
	return fileDescriptor_geottnsvc_d04c6f621b8ce5f8, []int{1}
}
func (m *KeyList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyList.Unmarshal(m, b)
}
func (m *KeyList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyList.Marshal(b, m, deterministic)
}
func (dst *KeyList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyList.Merge(dst, src)
}
func (m *KeyList) XXX_Size() int {
	return xxx_messageInfo_KeyList.Size(m)
}
func (m *KeyList) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyList.DiscardUnknown(m)
}

var xxx_messageInfo_KeyList proto.InternalMessageInfo

func (m *KeyList) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type DataPoints struct {
	Points               []*DataPoint `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DataPoints) Reset()         { *m = DataPoints{} }
func (m *DataPoints) String() string { return proto.CompactTextString(m) }
func (*DataPoints) ProtoMessage()    {}
func (*DataPoints) Descriptor() ([]byte, []int) {
	return fileDescriptor_geottnsvc_d04c6f621b8ce5f8, []int{2}
}
func (m *DataPoints) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPoints.Unmarshal(m, b)
}
func (m *DataPoints) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPoints.Marshal(b, m, deterministic)
}
func (dst *DataPoints) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPoints.Merge(dst, src)
}
func (m *DataPoints) XXX_Size() int {
	return xxx_messageInfo_DataPoints.Size(m)
}
func (m *DataPoints) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPoints.DiscardUnknown(m)
}

var xxx_messageInfo_DataPoints proto.InternalMessageInfo

func (m *DataPoints) GetPoints() []*DataPoint {
	if m != nil {
		return m.Points
	}
	return nil
}

type GetRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_geottnsvc_d04c6f621b8ce5f8, []int{3}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type RadiusSearchRequest struct {
	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng float64 `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
	// radius in meters
	Radius               float64  `protobuf:"fixed64,3,opt,name=radius,proto3" json:"radius,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RadiusSearchRequest) Reset()         { *m = RadiusSearchRequest{} }
func (m *RadiusSearchRequest) String() string { return proto.CompactTextString(m) }
func (*RadiusSearchRequest) ProtoMessage()    {}
func (*RadiusSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_geottnsvc_d04c6f621b8ce5f8, []int{4}
}
func (m *RadiusSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadiusSearchRequest.Unmarshal(m, b)
}
func (m *RadiusSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadiusSearchRequest.Marshal(b, m, deterministic)
}
func (dst *RadiusSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadiusSearchRequest.Merge(dst, src)
}
func (m *RadiusSearchRequest) XXX_Size() int {
	return xxx_messageInfo_RadiusSearchRequest.Size(m)
}
func (m *RadiusSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RadiusSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RadiusSearchRequest proto.InternalMessageInfo

func (m *RadiusSearchRequest) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *RadiusSearchRequest) GetLng() float64 {
	if m != nil {
		return m.Lng
	}
	return 0
}

func (m *RadiusSearchRequest) GetRadius() float64 {
	if m != nil {
		return m.Radius
	}
	return 0
}

type RectSearchRequest struct {
	Urlat                float64  `protobuf:"fixed64,1,opt,name=urlat,proto3" json:"urlat,omitempty"`
	Urlng                float64  `protobuf:"fixed64,2,opt,name=urlng,proto3" json:"urlng,omitempty"`
	Bllat                float64  `protobuf:"fixed64,3,opt,name=bllat,proto3" json:"bllat,omitempty"`
	Bllng                float64  `protobuf:"fixed64,4,opt,name=bllng,proto3" json:"bllng,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RectSearchRequest) Reset()         { *m = RectSearchRequest{} }
func (m *RectSearchRequest) String() string { return proto.CompactTextString(m) }
func (*RectSearchRequest) ProtoMessage()    {}
func (*RectSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_geottnsvc_d04c6f621b8ce5f8, []int{5}
}
func (m *RectSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RectSearchRequest.Unmarshal(m, b)
}
func (m *RectSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RectSearchRequest.Marshal(b, m, deterministic)
}
func (dst *RectSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RectSearchRequest.Merge(dst, src)
}
func (m *RectSearchRequest) XXX_Size() int {
	return xxx_messageInfo_RectSearchRequest.Size(m)
}
func (m *RectSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RectSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RectSearchRequest proto.InternalMessageInfo

func (m *RectSearchRequest) GetUrlat() float64 {
	if m != nil {
		return m.Urlat
	}
	return 0
}

func (m *RectSearchRequest) GetUrlng() float64 {
	if m != nil {
		return m.Urlng
	}
	return 0
}

func (m *RectSearchRequest) GetBllat() float64 {
	if m != nil {
		return m.Bllat
	}
	return 0
}

func (m *RectSearchRequest) GetBllng() float64 {
	if m != nil {
		return m.Bllng
	}
	return 0
}

func init() {
	proto.RegisterType((*DataPoint)(nil), "DataPoint")
	proto.RegisterType((*KeyList)(nil), "KeyList")
	proto.RegisterType((*DataPoints)(nil), "DataPoints")
	proto.RegisterType((*GetRequest)(nil), "GetRequest")
	proto.RegisterType((*RadiusSearchRequest)(nil), "RadiusSearchRequest")
	proto.RegisterType((*RectSearchRequest)(nil), "RectSearchRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GeoTTNClient is the client API for GeoTTN service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GeoTTNClient interface {
	Store(ctx context.Context, in *DataPoint, opts ...grpc.CallOption) (*empty.Empty, error)
	RadiusSearch(ctx context.Context, in *RadiusSearchRequest, opts ...grpc.CallOption) (*DataPoints, error)
	RectSearch(ctx context.Context, in *RectSearchRequest, opts ...grpc.CallOption) (*DataPoints, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*DataPoint, error)
	GetAll(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*DataPoints, error)
	Keys(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*KeyList, error)
}

type geoTTNClient struct {
	cc *grpc.ClientConn
}

func NewGeoTTNClient(cc *grpc.ClientConn) GeoTTNClient {
	return &geoTTNClient{cc}
}

func (c *geoTTNClient) Store(ctx context.Context, in *DataPoint, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/GeoTTN/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geoTTNClient) RadiusSearch(ctx context.Context, in *RadiusSearchRequest, opts ...grpc.CallOption) (*DataPoints, error) {
	out := new(DataPoints)
	err := c.cc.Invoke(ctx, "/GeoTTN/RadiusSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geoTTNClient) RectSearch(ctx context.Context, in *RectSearchRequest, opts ...grpc.CallOption) (*DataPoints, error) {
	out := new(DataPoints)
	err := c.cc.Invoke(ctx, "/GeoTTN/RectSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geoTTNClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*DataPoint, error) {
	out := new(DataPoint)
	err := c.cc.Invoke(ctx, "/GeoTTN/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geoTTNClient) GetAll(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*DataPoints, error) {
	out := new(DataPoints)
	err := c.cc.Invoke(ctx, "/GeoTTN/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geoTTNClient) Keys(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*KeyList, error) {
	out := new(KeyList)
	err := c.cc.Invoke(ctx, "/GeoTTN/Keys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GeoTTNServer is the server API for GeoTTN service.
type GeoTTNServer interface {
	Store(context.Context, *DataPoint) (*empty.Empty, error)
	RadiusSearch(context.Context, *RadiusSearchRequest) (*DataPoints, error)
	RectSearch(context.Context, *RectSearchRequest) (*DataPoints, error)
	Get(context.Context, *GetRequest) (*DataPoint, error)
	GetAll(context.Context, *GetRequest) (*DataPoints, error)
	Keys(context.Context, *empty.Empty) (*KeyList, error)
}

func RegisterGeoTTNServer(s *grpc.Server, srv GeoTTNServer) {
	s.RegisterService(&_GeoTTN_serviceDesc, srv)
}

func _GeoTTN_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataPoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeoTTNServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GeoTTN/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeoTTNServer).Store(ctx, req.(*DataPoint))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeoTTN_RadiusSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RadiusSearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeoTTNServer).RadiusSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GeoTTN/RadiusSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeoTTNServer).RadiusSearch(ctx, req.(*RadiusSearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeoTTN_RectSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RectSearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeoTTNServer).RectSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GeoTTN/RectSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeoTTNServer).RectSearch(ctx, req.(*RectSearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeoTTN_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeoTTNServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GeoTTN/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeoTTNServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeoTTN_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeoTTNServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GeoTTN/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeoTTNServer).GetAll(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeoTTN_Keys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeoTTNServer).Keys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GeoTTN/Keys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeoTTNServer).Keys(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _GeoTTN_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GeoTTN",
	HandlerType: (*GeoTTNServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Store",
			Handler:    _GeoTTN_Store_Handler,
		},
		{
			MethodName: "RadiusSearch",
			Handler:    _GeoTTN_RadiusSearch_Handler,
		},
		{
			MethodName: "RectSearch",
			Handler:    _GeoTTN_RectSearch_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _GeoTTN_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _GeoTTN_GetAll_Handler,
		},
		{
			MethodName: "Keys",
			Handler:    _GeoTTN_Keys_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "geottnsvc.proto",
}

func init() { proto.RegisterFile("geottnsvc.proto", fileDescriptor_geottnsvc_d04c6f621b8ce5f8) }

var fileDescriptor_geottnsvc_d04c6f621b8ce5f8 = []byte{
	// 455 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x8d, 0x9b, 0xc4, 0x8d, 0x27, 0x95, 0x80, 0xa1, 0x54, 0x96, 0xcb, 0xc5, 0x5a, 0xf1, 0x60,
	0x21, 0xb1, 0x41, 0xe9, 0x17, 0x20, 0x81, 0xa2, 0xaa, 0x08, 0xc1, 0x36, 0xef, 0x68, 0x13, 0x0f,
	0xc6, 0x8a, 0xe3, 0x35, 0xf6, 0xba, 0x92, 0x3f, 0x83, 0x6f, 0xe2, 0xc7, 0x90, 0xd7, 0x9b, 0x38,
	0x4d, 0xe9, 0xdb, 0x9c, 0x8b, 0x47, 0x73, 0x8e, 0x17, 0x9e, 0x24, 0xa4, 0xb4, 0xce, 0xab, 0xbb,
	0x35, 0x2f, 0x4a, 0xa5, 0x55, 0x70, 0x99, 0x28, 0x95, 0x64, 0x34, 0x33, 0x68, 0x55, 0xff, 0x9c,
	0xd1, 0xb6, 0xd0, 0x8d, 0x15, 0xdf, 0x1c, 0x8b, 0x3a, 0xdd, 0x52, 0xa5, 0xe5, 0xb6, 0xe8, 0x0c,
	0xec, 0xaf, 0x03, 0xde, 0x27, 0xa9, 0xe5, 0x37, 0x95, 0xe6, 0x1a, 0x5f, 0x80, 0x2b, 0x8b, 0xe2,
	0x47, 0x1a, 0xfb, 0x4e, 0xe8, 0x44, 0x9e, 0x18, 0xcb, 0xa2, 0xb8, 0x8e, 0xf1, 0x12, 0xbc, 0x98,
	0xee, 0xd2, 0x35, 0xb5, 0xca, 0x89, 0x51, 0x26, 0x1d, 0x71, 0x1d, 0x63, 0x00, 0x93, 0x4c, 0xea,
	0x54, 0xd7, 0x31, 0xf9, 0xc3, 0xd0, 0x89, 0x1c, 0xb1, 0xc7, 0xf8, 0x12, 0xbc, 0x4c, 0xe5, 0x49,
	0x27, 0x8e, 0x8c, 0xd8, 0x13, 0xc8, 0x61, 0xd4, 0x9e, 0xe3, 0x8f, 0x43, 0x27, 0x9a, 0xce, 0x03,
	0xde, 0xdd, 0xca, 0x77, 0xb7, 0xf2, 0xe5, 0xee, 0x56, 0x61, 0x7c, 0xe8, 0xc3, 0x69, 0x21, 0x9b,
	0x4c, 0xc9, 0xd8, 0x77, 0x43, 0x27, 0x3a, 0x13, 0x3b, 0xc8, 0x5e, 0xc1, 0xe9, 0x0d, 0x35, 0x5f,
	0xd2, 0x4a, 0x23, 0xc2, 0x68, 0x43, 0x4d, 0xe5, 0x3b, 0xe1, 0x30, 0xf2, 0x84, 0x99, 0xd9, 0x07,
	0x80, 0x7d, 0xc6, 0x0a, 0x19, 0xb8, 0x85, 0x99, 0x8c, 0x67, 0x3a, 0x07, 0xbe, 0x17, 0x85, 0x55,
	0xd8, 0x6b, 0x80, 0x05, 0x69, 0x41, 0xbf, 0x6b, 0xaa, 0x34, 0x3e, 0x85, 0xe1, 0x86, 0x1a, 0xdb,
	0x49, 0x3b, 0xb2, 0xef, 0xf0, 0x5c, 0xc8, 0x38, 0xad, 0xab, 0x5b, 0x92, 0xe5, 0xfa, 0xd7, 0x81,
	0x31, 0x93, 0xda, 0x18, 0x1d, 0xd1, 0x8e, 0x86, 0xc9, 0x13, 0x53, 0x5a, 0xcb, 0xe4, 0x09, 0x5e,
	0x80, 0x5b, 0x9a, 0x4f, 0x6d, 0x5b, 0x16, 0xb1, 0x0d, 0x3c, 0x13, 0xb4, 0xd6, 0xf7, 0x17, 0x9e,
	0xc3, 0xb8, 0x2e, 0xfb, 0x95, 0x1d, 0xb0, 0xec, 0x7e, 0x6d, 0x07, 0x5a, 0x76, 0x95, 0xb5, 0xde,
	0x6e, 0x6f, 0x07, 0x2c, 0x9b, 0x27, 0xb6, 0xfe, 0x0e, 0xcc, 0xff, 0x9c, 0x80, 0xbb, 0x20, 0xb5,
	0x5c, 0x7e, 0xc5, 0xf7, 0x30, 0xbe, 0xd5, 0xaa, 0x24, 0x3c, 0xe8, 0x21, 0xb8, 0x78, 0xf0, 0x33,
	0x3e, 0xb7, 0xaf, 0x8a, 0x0d, 0xf0, 0x0a, 0xce, 0x0e, 0x93, 0xe3, 0x39, 0xff, 0x4f, 0x11, 0xc1,
	0xb4, 0xdf, 0x55, 0xb1, 0x01, 0xce, 0x00, 0xfa, 0x6c, 0x88, 0xfc, 0x41, 0xd0, 0xe3, 0x0f, 0x42,
	0x18, 0x2e, 0x48, 0xe3, 0x94, 0xf7, 0x7f, 0x21, 0x38, 0xb8, 0x8f, 0x0d, 0xf0, 0x6d, 0x1b, 0x40,
	0x7f, 0xcc, 0xb2, 0xfb, 0xa6, 0xa3, 0x3d, 0xef, 0x60, 0x74, 0x43, 0x4d, 0x85, 0x8f, 0xe4, 0x09,
	0x26, 0xdc, 0xbe, 0x1b, 0x36, 0x58, 0xb9, 0x46, 0xbb, 0xfa, 0x17, 0x00, 0x00, 0xff, 0xff, 0xdc,
	0x45, 0xa2, 0xd0, 0x62, 0x03, 0x00, 0x00,
}
